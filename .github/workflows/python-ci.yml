name: Python CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    name: Test on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    env:
      # Make sure tests can import modules from the repository root
      PYTHONPATH: ${{ github.workspace }}
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10, 3.11]


    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-


      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi


      - name: Lint (flake8) — optional
        run: |
          pip install flake8 || true
          # Run flake8 only if a config exists or you want to always run it.
          if [ -f .flake8 ] || [ -f setup.cfg ]; then
            flake8
          else
            echo "No flake8 config found — skipping strict linting"
          fi


      - name: Run pytest
        run: |
          pip install pytest || true
          pytest -q


      - name: Smoke test — import functions and run assertions
        run: |
          python - <<'PY'
          try:
              from calculator import add, subtract, multiply, divide
          except Exception as e:
              print('Could not import calculator.py:', e)
              raise


          assert add(2, 3) == 5
          assert subtract(5, 2) == 3
          assert multiply(3, 4) == 12
          assert divide(10, 2) == 5


          try:
              r = divide(1, 0)
              print('divide(1,0) returned:', r)
          except Exception as ex:
              print('divide(1,0) raised exception (acceptable):', ex)


          print('Smoke tests passed')
          PY
